Servlet paths and restful methods
    x marks completion

    optional params for all methods:
    admin_mode: 1: request admin mode
        (granted to users with ADMIN role)

    Note: id of current user is always extracted
    from servlet context
    (no need to send params for that)

/login
	x POST: login a user:
		params: userName, password
		return: MessageDto

/protected/folder
	x GET: get all folders of a user
		params: -
		return: List<Folder>
	x POST: Create new folder
		params: userName
		return: MessageDto
	x PUT: Rename folder
		params: folder_id, name
		return: MessageDto
	x DELETE: Delete folder
		params: folder_d
		return: MessageDto

/protected/folder_owner
    x PUT: change folder ownership
        params: folder_id, owner_name
        return: MessageDto

/protected/folder_share
    x GET: get all folders shared with a user
        params: -
        return: List<Folder>

/protected/folder_share_mgr
    x GET: get all shared users of a folder
        params: folder_id
        return: List<User>
    x POST: share folder with user
        params: folder_id, user_name
        return: MessageDto
    x DELETE: remove user share from a folder
        params: folder_id, user_id
        return: MessageDto

/protected/sketches
	x GET: get all sketches in a folder as empty data containers
		 (without content)
		params: folder_id
		return: List<EmptySketchData>
	x POST: create an empty sketch
		params: folder_id, name
		return: MessageDto
	x PUT: rename sketch
		params: id, name
		return: MessageDto
	x DELETE: delete sketch
		params: id
		return: MessageDto

/protected/sketches_shared
	x GET: get all shared sketches in a folder as empty data containers
		 (without content)
		params: folder_id
		return: List<EmptySketchData>
		
/protected/sketch
	x GET: get a sketch:
		params: sketch_id
		return: Sketch
	x POST: modify sketch
		params: sketch_id, folder_id, userName, content
		return: MessageDto

/protected/sketch_shared
    x GET: get a shared sketch:
        params: sketch_id
        return: Sketch

/protected/users
    x GET: get a list of all users
        params: -
        return List<User> (sent without password for safety reasons)
    x POST: create a new empty user
        params: user_name, password, role
        return: MessageDto
    x DELETE: delete an existing user
        params: user_id
        return: MessageDto

/protected/user_edit
    x GET: get a user
        params: user_id
        return: User

    x POST: modify an existing user
        params: user_id, user_name, password, role
        return: MessageDto
